{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Choreo is a digital innovation platform that allows you to develop, deploy, and manage cloud-native applications at scale via an AI-powered, low-code application development environment. This learning portal allows you to easily browse through Choreo documentation, video tutorials, webinars, and all other resources to learn about Choreo and its capabilities.> Select a topic and dive in to learn how to use Choreo to build enterprise-class applications fast while ensuring best practices and secure coding guidelines: timer Get to Know Choreo Learn about the key capabilities of Choreo and understand the basic concepts. create Build Integrations Learn how to use Choreo to build enterprise-class integrations efficiently. input Work with Services Explore how you can build RESTFul services with Choreo. security Manage APIs Learn how to expose Choreo services or external APIs as managed APIs. traffic Observe Applications Explore how you can observe applications to get insights and assess performance. store Explore Business Scenarios Follow step-by-step tutorials to build common integration scenarios. Browse through our video tutorials to get up-to-speed with Choreo fast: Explore the latest Choreo resources to stay up to date:","title":"Welcome to the Choreo Learning Portal"},{"location":"page-not-found/","text":"Page not found \u00b6","title":""},{"location":"page-not-found/#page-not-found","text":"","title":"Page not found"},{"location":"learn/build-from-scratch/","text":"Build Your Integration from Scratch \u00b6","title":"Build Your Integration from Scratch"},{"location":"learn/build-from-scratch/#build-your-integration-from-scratch","text":"","title":"Build Your Integration from Scratch"},{"location":"learn/concepts/","text":"Understand Choreo Concepts \u00b6 Before you start working with Choreo, there are certain Choreo console components, constructs, and basic terminology that you need to understand. This section walks you through all the concepts and constructs. Console components \u00b6 Develop view \u00b6 Test view \u00b6 Deploy view \u00b6 Observe view \u00b6 Key constructs \u00b6 Described below are the key constructs you will come across when you start working with the Choreo console. Trigger \u00b6 A trigger in Choreo is an event or an action that can cause a Choreo application to start executing. Choreo supports the following trigger types: API: Allows you to expose an application as an API endpoint. Manual: Allows you to trigger an application manually. Schedule: Allows to trigger an application based on a schedule that you set. You can specify the schedule in the form of a cron expression. Note A cron expression represents details of a schedule. It is a string that contains subfields separated by whitespaces. Each special character (*) represents seconds, minutes, hours, date, month, day, and year respectively. Calendar: Allows you to trigger an application based on events in a Google Calendar. GitHub Allows you to trigger an application based on GitHub events and actions. The supported GitHub events and associated actions that can trigger a Choreo application are as follows: Event Action Application Trigger issue_comment created Add a comment to an issue edited Edit a comment on an issue deleted Delete a comment on an issue issues assigned Assign an issue to a user unassigned Unassign an issue from a user labeled Add a label to an issue unlabeled Remove a label from an issue opened Open an issue edited edit an issue milestoned Add a milestone to an issue demilestoned Remove a milestone from an issue closed Close an issue reopened Reopen an issue label created Create a label edited Edit a label deleted Delete a label milestone created Create a milestone closed Close a milestone opened Open a milestone edited Edit a milestone deleted Delete a milestone pull_request assigned Assign a pull request to a user unassigned Unassign a pull request from a user review_requested Request a user to review a pull request review_request_removed labeled Add a label to a pull request unlabeled Remove a label from a pull request opened Open a pull request edited Edit a pull request closed Close a pull request reopened Reopen a pull request pull_request_review submitted Submit a pull request edited Edit a pull request review dismissed Dismiss a pull request review pull_request_review_comment created Create a pull request review comment edited Edit a pull request review comment deleted Delete a pull request review comment Statement \u00b6 A statement is a syntactic unit that specifies the action to be carried out in a Choreo application. Choreo supports the following statements: Log: Allows you to add an entry to the application log at runtime. You can either add an Info log or an Error log depending on your requirement If: Allows you to execute a collection of statements if a specified condition is met. Variable: Allows you to declare a variable of a preferred type depending on your requirement. For-each: Allows you to traverse through items in a collection of data. For example, traverse through arrays, maps, JSON, XML, and tables. Respond: Allows you to send a response back to its client. For example, to get an API to respond with an HTTP_OK indicating that the request was processed successfully. Return: Allows you to end the ongoing execution of a Choreo application. Connector \u00b6 A Choreo connector allows you to connect to and interact with an external service through your application. You can use connectors to interact with generic protocol-based APIs and application specific APIs. Following are the connectors you can use to interact with generic protocol-based APIs: HTTP: Allows your application to interact with the HTTP API and communicate with an external endpoint via the HTTP protocol. SMTP: Allows your application to send emails via the SMTP protocol. POP3: Allows your application to receive emails from a POP3 email server. IMAP: Allows your application to receive emails from any email server that supports the IMAP protocol. Following are the connectors you can use to interact with application specific APIs: GitHub: Allows your application to interact with the GitHub API and perform required operations. Gmail: Allows your application to interact with the Gmail API and perform operations such as creating, modifying, and sending emails. Google Calendar: Allows your application to interact with the Google Calendar API and perform required operations. Google Sheets: Allows your application to interact with the Google Sheets API and perform operations such as creating and listing spreadsheets. Twilio: Allows your application to interact with the Twilio API and perform operations such as sending messages, WhatsApp messages, and making voice calls. Basic concepts \u00b6 Integration \u00b6 Service \u00b6 APIs \u00b6","title":"Understand  Concepts"},{"location":"learn/concepts/#understand-choreo-concepts","text":"Before you start working with Choreo, there are certain Choreo console components, constructs, and basic terminology that you need to understand. This section walks you through all the concepts and constructs.","title":"Understand Choreo Concepts"},{"location":"learn/concepts/#console-components","text":"","title":"Console components"},{"location":"learn/concepts/#develop-view","text":"","title":"Develop view"},{"location":"learn/concepts/#test-view","text":"","title":"Test view"},{"location":"learn/concepts/#deploy-view","text":"","title":"Deploy view"},{"location":"learn/concepts/#observe-view","text":"","title":"Observe view"},{"location":"learn/concepts/#key-constructs","text":"Described below are the key constructs you will come across when you start working with the Choreo console.","title":"Key constructs"},{"location":"learn/concepts/#trigger","text":"A trigger in Choreo is an event or an action that can cause a Choreo application to start executing. Choreo supports the following trigger types: API: Allows you to expose an application as an API endpoint. Manual: Allows you to trigger an application manually. Schedule: Allows to trigger an application based on a schedule that you set. You can specify the schedule in the form of a cron expression. Note A cron expression represents details of a schedule. It is a string that contains subfields separated by whitespaces. Each special character (*) represents seconds, minutes, hours, date, month, day, and year respectively. Calendar: Allows you to trigger an application based on events in a Google Calendar. GitHub Allows you to trigger an application based on GitHub events and actions. The supported GitHub events and associated actions that can trigger a Choreo application are as follows: Event Action Application Trigger issue_comment created Add a comment to an issue edited Edit a comment on an issue deleted Delete a comment on an issue issues assigned Assign an issue to a user unassigned Unassign an issue from a user labeled Add a label to an issue unlabeled Remove a label from an issue opened Open an issue edited edit an issue milestoned Add a milestone to an issue demilestoned Remove a milestone from an issue closed Close an issue reopened Reopen an issue label created Create a label edited Edit a label deleted Delete a label milestone created Create a milestone closed Close a milestone opened Open a milestone edited Edit a milestone deleted Delete a milestone pull_request assigned Assign a pull request to a user unassigned Unassign a pull request from a user review_requested Request a user to review a pull request review_request_removed labeled Add a label to a pull request unlabeled Remove a label from a pull request opened Open a pull request edited Edit a pull request closed Close a pull request reopened Reopen a pull request pull_request_review submitted Submit a pull request edited Edit a pull request review dismissed Dismiss a pull request review pull_request_review_comment created Create a pull request review comment edited Edit a pull request review comment deleted Delete a pull request review comment","title":"Trigger"},{"location":"learn/concepts/#statement","text":"A statement is a syntactic unit that specifies the action to be carried out in a Choreo application. Choreo supports the following statements: Log: Allows you to add an entry to the application log at runtime. You can either add an Info log or an Error log depending on your requirement If: Allows you to execute a collection of statements if a specified condition is met. Variable: Allows you to declare a variable of a preferred type depending on your requirement. For-each: Allows you to traverse through items in a collection of data. For example, traverse through arrays, maps, JSON, XML, and tables. Respond: Allows you to send a response back to its client. For example, to get an API to respond with an HTTP_OK indicating that the request was processed successfully. Return: Allows you to end the ongoing execution of a Choreo application.","title":"Statement"},{"location":"learn/concepts/#connector","text":"A Choreo connector allows you to connect to and interact with an external service through your application. You can use connectors to interact with generic protocol-based APIs and application specific APIs. Following are the connectors you can use to interact with generic protocol-based APIs: HTTP: Allows your application to interact with the HTTP API and communicate with an external endpoint via the HTTP protocol. SMTP: Allows your application to send emails via the SMTP protocol. POP3: Allows your application to receive emails from a POP3 email server. IMAP: Allows your application to receive emails from any email server that supports the IMAP protocol. Following are the connectors you can use to interact with application specific APIs: GitHub: Allows your application to interact with the GitHub API and perform required operations. Gmail: Allows your application to interact with the Gmail API and perform operations such as creating, modifying, and sending emails. Google Calendar: Allows your application to interact with the Google Calendar API and perform required operations. Google Sheets: Allows your application to interact with the Google Sheets API and perform operations such as creating and listing spreadsheets. Twilio: Allows your application to interact with the Twilio API and perform operations such as sending messages, WhatsApp messages, and making voice calls.","title":"Connector"},{"location":"learn/concepts/#basic-concepts","text":"","title":"Basic concepts"},{"location":"learn/concepts/#integration","text":"","title":"Integration"},{"location":"learn/concepts/#service","text":"","title":"Service"},{"location":"learn/concepts/#apis","text":"","title":"APIs"},{"location":"learn/create-from-choreo/","text":"Create an API From a Choreo Application \u00b6","title":"Create an API From a Choreo Application"},{"location":"learn/create-from-choreo/#create-an-api-from-a-choreo-application","text":"","title":"Create an API From a Choreo Application"},{"location":"learn/create-from-rest-definition/","text":"Create an API From a REST API Definition \u00b6","title":"Create an API From a REST API Definition"},{"location":"learn/create-from-rest-definition/#create-an-api-from-a-rest-api-definition","text":"","title":"Create an API From a REST API Definition"},{"location":"learn/create-service/","text":"Create Your Own Service \u00b6","title":"Create Your Own Service"},{"location":"learn/create-service/#create-your-own-service","text":"","title":"Create Your Own Service"},{"location":"learn/deploy-to-k8s/","text":"Deploy Integrations to Kubernetes \u00b6","title":"Deploy Integrations to Kubernetes"},{"location":"learn/deploy-to-k8s/#deploy-integrations-to-kubernetes","text":"","title":"Deploy Integrations to Kubernetes"},{"location":"learn/expression-editor/","text":"Choreo Expression Editor Syntax \u00b6","title":"Choreo Expression Editor Syntax"},{"location":"learn/expression-editor/#choreo-expression-editor-syntax","text":"","title":"Choreo Expression Editor Syntax"},{"location":"learn/faq/","text":"Frequently Asked Questions \u00b6","title":"Frequently Asked Questions"},{"location":"learn/faq/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"learn/google-sheets-salesforce/","text":"Integrate Google Sheets with Salesforce \u00b6","title":"Integrate Google Sheets with Salesforce"},{"location":"learn/google-sheets-salesforce/#integrate-google-sheets-with-salesforce","text":"","title":"Integrate Google Sheets with Salesforce"},{"location":"learn/google-sheets-stripe/","text":"Integrate Google Sheets with Stripe \u00b6","title":"Integrate Google Sheets with Stripe"},{"location":"learn/google-sheets-stripe/#integrate-google-sheets-with-stripe","text":"","title":"Integrate Google Sheets with Stripe"},{"location":"learn/observe-sample-app/","text":"Observe a Sample Application \u00b6","title":"Observe a Sample Application"},{"location":"learn/observe-sample-app/#observe-a-sample-application","text":"","title":"Observe a Sample Application"},{"location":"learn/overview/","text":"About Choreo \u00b6 Choreo is an intelligent EiPaaS that simplifies the process of building enterprise-class applications efficiently. Choreo allows you to switch between a visual low-code experience and typical code environment so that you can make use of the most appropriate depending on the task at hand. Here are some of the key capabilities of Choreo that you can benefit from: Low code experience that allows you to easily build applications without the need to have expert-level coding skills. Ability to auto-generate editable and version-controlled code that can be maintained in GitHub, which in turn allows you to apply the engineering rigor required for enterprise applications on low-code.. Availability of development, staging, and production environments, CI/CD pipelines as well as automation tests to take advantage of cloud-native deployment. Support to observe user applications, view diverse information in context, troubleshoot, and receive notifications when there is a deviation from normal behavior.","title":"About Choreo"},{"location":"learn/overview/#about-choreo","text":"Choreo is an intelligent EiPaaS that simplifies the process of building enterprise-class applications efficiently. Choreo allows you to switch between a visual low-code experience and typical code environment so that you can make use of the most appropriate depending on the task at hand. Here are some of the key capabilities of Choreo that you can benefit from: Low code experience that allows you to easily build applications without the need to have expert-level coding skills. Ability to auto-generate editable and version-controlled code that can be maintained in GitHub, which in turn allows you to apply the engineering rigor required for enterprise applications on low-code.. Availability of development, staging, and production environments, CI/CD pipelines as well as automation tests to take advantage of cloud-native deployment. Support to observe user applications, view diverse information in context, troubleshoot, and receive notifications when there is a deviation from normal behavior.","title":"About Choreo"},{"location":"learn/perform-analysis/","text":"Perform Root Cause Analysis \u00b6","title":"Perform Root Cause Analysis"},{"location":"learn/perform-analysis/#perform-root-cause-analysis","text":"","title":"Perform Root Cause Analysis"},{"location":"learn/use-existing/","text":"Use an Existing Integration and Customize \u00b6","title":"Use an Existing Integration and Customize"},{"location":"learn/use-existing/#use-an-existing-integration-and-customize","text":"","title":"Use an Existing Integration and Customize"},{"location":"learn/use-sample/","text":"Use a Sample Service and Customize \u00b6","title":"Use a Sample Service and Customize"},{"location":"learn/use-sample/#use-a-sample-service-and-customize","text":"","title":"Use a Sample Service and Customize"}]}